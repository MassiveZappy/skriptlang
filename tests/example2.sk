# Skript that demonstrates most of the standard features

# Variables
on load:
    set {greeting} to "Welcome to the server!"
    set {player_count} to 0

# Command to check player count
command /playercount:
    trigger:
        send "The current player count is %{player_count}%" to player

# When a player joins
on join:
    increment {player_count} by 1
    broadcast "%player%'s has joined the server!"
    send "{greeting}" to player
    if {player_count} > 10:
        broadcast "We have more than 10 players online! Awesome!"

# When a player leaves
on quit:
    decrement {player_count} by 1
    broadcast "%player%'s has left the server."
    if {player_count} < 5:
        broadcast "We have less than 5 players. Come back, players!"

# Event handling for players breaking blocks
on break of stone:
    send "You broke a stone!" to player
    # Give the player a custom reward
    give 1 diamond to player

# Loop example with conditions
every 10 seconds:
    loop all players:
        if loop-player's food level < 10:
            set loop-player's food level to 20
            send "Your food level has been replenished!" to loop-player

# Handling chat messages
on chat:
    if message contains "hello":
        send "Hi, %player%! How can I help you?" to player
    if message contains "goodbye":
        cancel event
        send "Goodbye! Hope to see you again soon!" to player

# Custom variables and conditions
command /setscore <number>:
    permission: setscore.use
    trigger:
        set {score::%player%} to arg-1
        send "Your score is now %{score::%player%}%" to player

# Using different types of loops
every 5 minutes:
    loop 5 times:
        broadcast "The server has been running for another 5 minutes!"
    loop all players:
        send "Don't forget to check the server rules!" to loop-player

# Error handling with try-catch-like mechanism
on damage:
    try:
        if event-entity is player:
            cancel event
            send "You can't take damage!" to player
    catch:
        broadcast "An error occurred while handling damage."

# Wait feature with delayed actions
command /delayedmessage:
    trigger:
        send "Wait for 5 seconds..."
        wait 5 seconds
        send "5 seconds have passed!" to player

# Custom Items (Example: Give custom item)
command /givecustomitem:
    trigger:
        give 1 diamond sword named "Excalibur" to player
        send "You received Excalibur!" to player

# Random number generation and conditions
command /randomcheck:
    trigger:
        set {randomNumber} to random integer between 1 and 100
        if {randomNumber} > 50:
            send "You got lucky! The number was %{randomNumber}%" to player
        else:
            send "Better luck next time. The number was %{randomNumber}%" to player

# Checking if a player has a specific item
on death of player:
    if player has 1 apple:
        send "You have an apple! Enjoy your meal!" to player
    else:
        send "You don't have any apples." to player
